node {

notify('Started') 
 
 stage('Pull Git Latest Changes in the Repo') {
   git 'https://github.com/amitvashist7/jenkins-devops-062019.git'
}
   def project_path = "atmosphere/spring-boot-samples/spring-boot-sample-atmosphere/"
 
   dir(project_path) { 
   stage('Clean old Packages') {       
   sh label: '', script: 'mvn clean'
   }
   
   stage('Package Build') {
   sh label: '', script: 'mvn package'
   }
   
   stage('Code Quality') {
   sh label: '', script: 'mvn verify'
   }
   
 stage('Parallel Jobs') 
 parallel "Code Quality Publish":{
   publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: 'target/site/jacoco/', reportFiles: 'index.html', reportName: 'Jococo Code Quality Report', reportTitles: 'Code Quality Report'])
   },
  "Test Results Publish": {
   junit 'target/surefire-reports/TEST-*.xml'
   }
   
   
   stage('Deploy Atmosphere in stage - Docker Env') {
   sh label: '', script: 'docker-compose up -d --build'
   }



   stage('Getting Ready For Ansible') {
   sh label: '', script: 'cp -rf target/spring-boot-sample-atmosphere-1.4.0.BUILD-SNAPSHOT.jar ../../../ansible/demo7/templates/atmosphere-v1.jar'
   }


   stage('Prod Deployment via Ansible') {
   sh label: '', script: 'ansible-playbook  -i ../../../ansible/demo7/inventory ../../../ansible/demo7/webserver-playbook.yaml'
   }

   stage('Archive Artifacts') {
   archive 'target/*.jar'
   }
   
 
   
   }
 notify('Completed') 
    
}


def notify(status){ 
    emailext(
        to: "amitvashist7@gmail.com",
        subject: "${status}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
        body: """<p>${status}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':</p>
        <p>Check Console output at <a href='${env.BUILD_URL}'> ${env.JOB_NAME} [${env.BUILD_NUMBER}]</a></p>""",
        )   
    
    
}
